# Generated by Django 2.2.3 on 2019-08-27 10:12

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alert_api', '0001_initial'),
        ('canary_files', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phonenumber', models.CharField(max_length=13)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DefaultSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_name', models.CharField(default='Defaults', max_length=50, unique=True)),
                ('domain_name', models.CharField(default='domain.subdomain.example', max_length=255)),
                ('protocol', models.CharField(default='http', max_length=5)),
                ('dns', models.BooleanField(default=True)),
                ('smb_root', models.CharField(max_length=255)),
                ('web_root', models.CharField(max_length=255)),
                ('deploy_root', models.CharField(max_length=255)),
                ('deploy_cache', models.CharField(max_length=255)),
                ('canary_path', models.CharField(max_length=255)),
                ('smb_canary_path', models.CharField(max_length=255)),
                ('nginx_domain', models.CharField(max_length=63)),
                ('secret_key', models.CharField(max_length=2048)),
                ('removal_time', models.IntegerField()),
                ('resolver_ip', models.CharField(max_length=15)),
                ('source', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalAPISetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_name', models.CharField(max_length=32)),
                ('api_user', models.CharField(max_length=50, null=True)),
                ('api_password', models.CharField(max_length=100, null=True)),
                ('api_key', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SMSSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_server', models.CharField(max_length=255)),
                ('sms_endpoint', models.CharField(max_length=255)),
                ('sms_client', models.CharField(max_length=255)),
                ('sms_secret', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SMTPSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smtp_server', models.CharField(max_length=255)),
                ('smtp_port', models.IntegerField()),
                ('ssl', models.BooleanField()),
                ('subject', models.CharField(max_length=255)),
                ('sender', models.CharField(max_length=255)),
                ('default_recv', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('trigger_identifier', models.CharField(max_length=255, unique=True)),
                ('sms', models.BooleanField()),
                ('email', models.BooleanField()),
                ('canary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='canary_files.CanaryItem')),
                ('mimialert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='alert_api.MimiAlertItem')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
